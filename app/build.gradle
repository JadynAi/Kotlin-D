apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'svg'

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId 'com.jadynai.kotlindiary'
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    buildFeatures {
        viewBinding true
    }

}

androidExtensions {
    experimental = true
}

//apply plugin: 'com.jadyn.trace-plugin'
//
//systrace {
//    pacListFile = ""
//}

dependencies {
//    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation("androidx.datastore:datastore-preferences-rxjava2:1.0.0")

    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'androidx.fragment:fragment-ktx:1.3.0-rc01'
    implementation 'com.airbnb.android:mavericks:2.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    compile("com.github.bumptech.glide:recyclerview-integration:4.11.0") {
        transitive = false
    }

    kapt 'com.github.bumptech.glide:compiler:4.8.0'
    implementation 'com.google.android:flexbox:1.0.0'

    api project(':kotlinD')
    api project(':acrobat')
    api project(path: ':kotlinP')
    implementation 'com.github.barteksc:android-pdf-viewer:3.2.0-beta.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
//    implementation 'com.jadyn.trace_tool:TraceDTools:1.1.0'

    implementation "io.reactivex.rxjava2:rxjava:2.2.6"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "org.reduxkotlin:redux-kotlin-threadsafe-jvm:0.5.5"
    implementation 'com.github.megatronking:svg-support:1.3.2'
    implementation "me.weishu:free_reflection:3.0.1"
//    implementation "me.weishu:epic:0.11.1"
//    implementation "me.weishu.exposed:exposed-xposedapi:0.4.6"
//    implementation "com.github.tiann:FreeReflection:3.1.0"
//    api 'me.weishu.exposed:exposed-xposedapi:0.4.5'

    testImplementation(project(path: ':kotlinP', configuration: 'kotlinPTest'))
}


svg {
    // 下面四个参数是vector文件生成java渲染类文件的相关配置
    // vector资源文件目录，支持多个目录
    vectorDirs = ["src/main/svg_debug/drawable"]
    // shape资源文件目录
    shapeDir = "src/main/svg_release/drawable"
    // 生成java渲染类的存放包目录
    javaDir = "src/main/java/com/jadynai/svg/sample/drawables"

    // 下面参数是svg格式文件生成vector资源文件的配置
    svg2vector {
        // 这里的test可以随意命名，建议使用文件夹名
//        test {
//            // svg格式文件目录
//            svgDir = "${rootDir}/test"
//            // 生成vector资源文件的存放目录
//            vectorDir = "src/main/svg_debug/drawable"
//            // 宽高参数指定生成vector文件的宽高，如果省略将默认使用图片原始宽高
//            // 注意此处宽高比要与图片宽高比一致，否则图片会变形
////            height = 48
////            width = 48
//        }
    }
}
