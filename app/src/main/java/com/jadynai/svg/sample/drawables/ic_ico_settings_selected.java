package com.jadynai.svg.sample.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_ico_settings_selected extends SVGRenderer {

    public ic_ico_settings_selected(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(38.0f);
        mHeight = dip2px(38.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 38.0f;
        final float scaleY = h / 38.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(16.0689f, 6.1887f);
        mPath.lineTo(22.5132f, 6.1887f);
        mPath.lineTo(23.2331f, 10.5059f);
        mPath.cubicTo(23.7819f, 10.7612f, 24.3007f, 11.0681f, 24.7848f, 11.42f);
        mPath.lineTo(29.0984f, 9.8039f);
        mPath.lineTo(32.3206f, 15.3848f);
        mPath.lineTo(28.6382f, 18.4157f);
        mPath.cubicTo(28.6506f, 18.608f, 28.6573f, 18.8028f, 28.6573f, 19.0f);
        mPath.cubicTo(28.6573f, 19.1972f, 28.6506f, 19.392f, 28.6382f, 19.5843f);
        mPath.lineTo(32.3206f, 22.6152f);
        mPath.lineTo(29.0984f, 28.1961f);
        mPath.lineTo(24.7848f, 26.58f);
        mPath.cubicTo(24.3007f, 26.9319f, 23.7819f, 27.2388f, 23.2331f, 27.4941f);
        mPath.lineTo(22.5132f, 31.8113f);
        mPath.lineTo(16.0689f, 31.8113f);
        mPath.lineTo(15.3489f, 27.4941f);
        mPath.cubicTo(14.8001f, 27.2388f, 14.2814f, 26.9319f, 13.7973f, 26.58f);
        mPath.lineTo(9.4837f, 28.1961f);
        mPath.lineTo(6.2615f, 22.6152f);
        mPath.lineTo(9.9439f, 19.5843f);
        mPath.cubicTo(9.9315f, 19.392f, 9.9248f, 19.1972f, 9.9248f, 19.0f);
        mPath.cubicTo(9.9248f, 18.8028f, 9.9315f, 18.608f, 9.9439f, 18.4157f);
        mPath.lineTo(6.2615f, 15.3848f);
        mPath.lineTo(9.4837f, 9.8039f);
        mPath.lineTo(13.7973f, 11.42f);
        mPath.cubicTo(14.2814f, 11.0681f, 14.8001f, 10.7612f, 15.3489f, 10.5059f);
        mPath.lineTo(16.0689f, 6.1887f);
        mPath.close();
        mPath.moveTo(16.0689f, 6.1887f);
        mPath.moveTo(17.3456f, 7.6959f);
        mPath.lineTo(16.6994f, 11.5704f);
        mPath.lineTo(16.3111f, 11.7297f);
        mPath.cubicTo(15.617f, 12.0144f, 14.9735f, 12.3968f, 14.3933f, 12.8605f);
        mPath.lineTo(14.059f, 13.1276f);
        mPath.lineTo(10.1506f, 11.6633f);
        mPath.lineTo(8.2052f, 15.0326f);
        mPath.lineTo(11.5205f, 17.7613f);
        mPath.lineTo(11.4778f, 18.1648f);
        mPath.cubicTo(11.4484f, 18.442f, 11.432f, 18.7202f, 11.432f, 19.0f);
        mPath.cubicTo(11.432f, 19.2798f, 11.4484f, 19.558f, 11.4778f, 19.8352f);
        mPath.lineTo(11.5205f, 20.2387f);
        mPath.lineTo(8.2052f, 22.9674f);
        mPath.lineTo(10.1506f, 26.3367f);
        mPath.lineTo(14.059f, 24.8724f);
        mPath.lineTo(14.3933f, 25.1395f);
        mPath.cubicTo(14.9735f, 25.6032f, 15.617f, 25.9856f, 16.3111f, 26.2703f);
        mPath.lineTo(16.6994f, 26.4296f);
        mPath.lineTo(17.3456f, 30.3041f);
        mPath.lineTo(21.2365f, 30.3041f);
        mPath.lineTo(21.8826f, 26.4296f);
        mPath.lineTo(22.271f, 26.2703f);
        mPath.cubicTo(22.9651f, 25.9856f, 23.6086f, 25.6032f, 24.1888f, 25.1395f);
        mPath.lineTo(24.523f, 24.8724f);
        mPath.lineTo(28.4315f, 26.3367f);
        mPath.lineTo(30.3768f, 22.9674f);
        mPath.lineTo(27.0615f, 20.2387f);
        mPath.lineTo(27.1043f, 19.8352f);
        mPath.cubicTo(27.1337f, 19.558f, 27.1501f, 19.2798f, 27.1501f, 19.0f);
        mPath.cubicTo(27.1501f, 18.7202f, 27.1337f, 18.442f, 27.1043f, 18.1648f);
        mPath.lineTo(27.0615f, 17.7613f);
        mPath.lineTo(30.3768f, 15.0326f);
        mPath.lineTo(28.4315f, 11.6633f);
        mPath.lineTo(24.523f, 13.1276f);
        mPath.lineTo(24.1888f, 12.8605f);
        mPath.cubicTo(23.6086f, 12.3968f, 22.9651f, 12.0144f, 22.271f, 11.7297f);
        mPath.lineTo(21.8826f, 11.5704f);
        mPath.lineTo(21.2365f, 7.6959f);
        mPath.lineTo(17.3456f, 7.6959f);
        mPath.close();
        mPath.moveTo(17.3456f, 7.6959f);
        mPath.moveTo(19.291f, 15.369f);
        mPath.cubicTo(17.2861f, 15.369f, 15.66f, 16.995f, 15.66f, 19.0f);
        mPath.cubicTo(15.66f, 21.005f, 17.2861f, 22.631f, 19.291f, 22.631f);
        mPath.cubicTo(21.296f, 22.631f, 22.922f, 21.005f, 22.922f, 19.0f);
        mPath.cubicTo(22.922f, 16.995f, 21.296f, 15.369f, 19.291f, 15.369f);
        mPath.close();
        mPath.moveTo(19.291f, 15.369f);
        mPath.moveTo(14.1528f, 19.0f);
        mPath.cubicTo(14.1528f, 16.1626f, 16.4536f, 13.8618f, 19.291f, 13.8618f);
        mPath.cubicTo(22.1284f, 13.8618f, 24.4293f, 16.1626f, 24.4293f, 19.0f);
        mPath.cubicTo(24.4293f, 21.8374f, 22.1284f, 24.1382f, 19.291f, 24.1382f);
        mPath.cubicTo(16.4536f, 24.1382f, 14.1528f, 21.8374f, 14.1528f, 19.0f);
        mPath.close();
        mPath.moveTo(14.1528f, 19.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mRenderPath.setFillType(android.graphics.Path.FillType.EVEN_ODD);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(15.8561f, 5.9375f);
        mPath.lineTo(22.7259f, 5.9375f);
        mPath.lineTo(23.4593f, 10.3351f);
        mPath.cubicTo(23.9375f, 10.5658f, 24.3928f, 10.8348f, 24.8221f, 11.1378f);
        mPath.lineTo(29.2095f, 9.494f);
        mPath.lineTo(32.6446f, 15.4435f);
        mPath.lineTo(28.8963f, 18.5286f);
        mPath.cubicTo(28.9042f, 18.684f, 28.9085f, 18.8412f, 28.9085f, 19.0f);
        mPath.cubicTo(28.9085f, 19.1588f, 28.9042f, 19.316f, 28.8963f, 19.4714f);
        mPath.lineTo(32.6446f, 22.5565f);
        mPath.lineTo(29.2095f, 28.506f);
        mPath.lineTo(24.8221f, 26.8622f);
        mPath.cubicTo(24.3928f, 27.1652f, 23.9375f, 27.4342f, 23.4593f, 27.6649f);
        mPath.lineTo(22.7259f, 32.0625f);
        mPath.lineTo(15.8561f, 32.0625f);
        mPath.lineTo(15.1227f, 27.6649f);
        mPath.cubicTo(14.6446f, 27.4342f, 14.1893f, 27.1652f, 13.76f, 26.8622f);
        mPath.lineTo(9.3726f, 28.506f);
        mPath.lineTo(5.9375f, 22.5565f);
        mPath.lineTo(9.6858f, 19.4714f);
        mPath.cubicTo(9.6778f, 19.316f, 9.6736f, 19.1588f, 9.6736f, 19.0f);
        mPath.cubicTo(9.6736f, 18.8412f, 9.6778f, 18.684f, 9.6858f, 18.5286f);
        mPath.lineTo(5.9375f, 15.4435f);
        mPath.lineTo(9.3726f, 9.494f);
        mPath.lineTo(13.76f, 11.1378f);
        mPath.cubicTo(14.1893f, 10.8348f, 14.6446f, 10.5658f, 15.1227f, 10.3351f);
        mPath.lineTo(15.8561f, 5.9375f);
        mPath.close();
        mPath.moveTo(15.8561f, 5.9375f);
        mPath.moveTo(16.2817f, 6.4399f);
        mPath.lineTo(15.5749f, 10.6778f);
        mPath.lineTo(15.4549f, 10.7337f);
        mPath.cubicTo(14.921f, 10.982f, 14.4162f, 11.2807f, 13.945f, 11.6232f);
        mPath.lineTo(13.8357f, 11.7027f);
        mPath.lineTo(9.5948f, 10.1138f);
        mPath.lineTo(6.5854f, 15.3261f);
        mPath.lineTo(10.2029f, 18.3035f);
        mPath.lineTo(10.1946f, 18.4319f);
        mPath.cubicTo(10.1825f, 18.6191f, 10.176f, 18.8085f, 10.176f, 19.0f);
        mPath.cubicTo(10.176f, 19.1915f, 10.1825f, 19.3809f, 10.1946f, 19.5681f);
        mPath.lineTo(10.2029f, 19.6965f);
        mPath.lineTo(6.5854f, 22.6739f);
        mPath.lineTo(9.5948f, 27.8862f);
        mPath.lineTo(13.8357f, 26.2973f);
        mPath.lineTo(13.945f, 26.3768f);
        mPath.cubicTo(14.4162f, 26.7193f, 14.921f, 27.018f, 15.4549f, 27.2663f);
        mPath.lineTo(15.5749f, 27.3222f);
        mPath.lineTo(16.2817f, 31.5601f);
        mPath.lineTo(22.3004f, 31.5601f);
        mPath.lineTo(23.0071f, 27.3222f);
        mPath.lineTo(23.1272f, 27.2663f);
        mPath.cubicTo(23.661f, 27.018f, 24.1658f, 26.7193f, 24.6371f, 26.3768f);
        mPath.lineTo(24.7464f, 26.2973f);
        mPath.lineTo(28.9872f, 27.8862f);
        mPath.lineTo(31.9966f, 22.6739f);
        mPath.lineTo(28.3792f, 19.6965f);
        mPath.lineTo(28.3875f, 19.5681f);
        mPath.cubicTo(28.3996f, 19.3809f, 28.4061f, 19.1915f, 28.4061f, 19.0f);
        mPath.cubicTo(28.4061f, 18.8085f, 28.3996f, 18.6191f, 28.3875f, 18.4319f);
        mPath.lineTo(28.3792f, 18.3035f);
        mPath.lineTo(31.9966f, 15.3261f);
        mPath.lineTo(28.9872f, 10.1138f);
        mPath.lineTo(24.7463f, 11.7027f);
        mPath.lineTo(24.6371f, 11.6232f);
        mPath.cubicTo(24.1658f, 11.2807f, 23.661f, 10.982f, 23.1272f, 10.7337f);
        mPath.lineTo(23.0071f, 10.6778f);
        mPath.lineTo(22.3004f, 6.4399f);
        mPath.lineTo(16.2817f, 6.4399f);
        mPath.close();
        mPath.moveTo(16.2817f, 6.4399f);
        mPath.moveTo(17.1328f, 7.4447f);
        mPath.lineTo(21.4493f, 7.4447f);
        mPath.lineTo(22.1074f, 11.3911f);
        mPath.lineTo(22.3663f, 11.4973f);
        mPath.cubicTo(23.0831f, 11.7913f, 23.7472f, 12.186f, 24.3456f, 12.6643f);
        mPath.lineTo(24.5685f, 12.8423f);
        mPath.lineTo(28.5426f, 11.3534f);
        mPath.lineTo(30.7008f, 15.0913f);
        mPath.lineTo(27.3256f, 17.8693f);
        mPath.lineTo(27.3541f, 18.1383f);
        mPath.cubicTo(27.3843f, 18.4233f, 27.4013f, 18.7104f, 27.4013f, 19.0f);
        mPath.cubicTo(27.4013f, 19.2896f, 27.3843f, 19.5767f, 27.3541f, 19.8617f);
        mPath.lineTo(27.3256f, 20.1307f);
        mPath.lineTo(30.7008f, 22.9087f);
        mPath.lineTo(28.5426f, 26.6466f);
        mPath.lineTo(24.5685f, 25.1577f);
        mPath.lineTo(24.3456f, 25.3357f);
        mPath.cubicTo(23.7472f, 25.814f, 23.0831f, 26.2087f, 22.3663f, 26.5027f);
        mPath.lineTo(22.1074f, 26.6089f);
        mPath.lineTo(21.4493f, 30.5553f);
        mPath.lineTo(17.1328f, 30.5553f);
        mPath.lineTo(16.4747f, 26.6089f);
        mPath.lineTo(16.2158f, 26.5027f);
        mPath.cubicTo(15.499f, 26.2087f, 14.8348f, 25.814f, 14.2364f, 25.3357f);
        mPath.lineTo(14.0136f, 25.1577f);
        mPath.lineTo(10.0394f, 26.6466f);
        mPath.lineTo(7.8813f, 22.9087f);
        mPath.lineTo(11.2565f, 20.1307f);
        mPath.lineTo(11.228f, 19.8617f);
        mPath.cubicTo(11.1977f, 19.5767f, 11.1808f, 19.2896f, 11.1808f, 19.0f);
        mPath.cubicTo(11.1808f, 18.7104f, 11.1977f, 18.4233f, 11.228f, 18.1383f);
        mPath.lineTo(11.2565f, 17.8693f);
        mPath.lineTo(7.8813f, 15.0913f);
        mPath.lineTo(10.0394f, 11.3534f);
        mPath.lineTo(14.0136f, 12.8423f);
        mPath.lineTo(14.2364f, 12.6643f);
        mPath.cubicTo(14.8348f, 12.186f, 15.499f, 11.7913f, 16.2158f, 11.4973f);
        mPath.lineTo(16.4747f, 11.3911f);
        mPath.lineTo(17.1328f, 7.4447f);
        mPath.close();
        mPath.moveTo(17.1328f, 7.4447f);
        mPath.moveTo(17.5584f, 7.9471f);
        mPath.lineTo(16.9242f, 11.7497f);
        mPath.lineTo(16.4064f, 11.9621f);
        mPath.cubicTo(15.735f, 12.2375f, 15.1121f, 12.6076f, 14.5501f, 13.0567f);
        mPath.lineTo(14.1044f, 13.4129f);
        mPath.lineTo(10.2617f, 11.9732f);
        mPath.lineTo(8.5292f, 14.9739f);
        mPath.lineTo(11.7846f, 17.6533f);
        mPath.lineTo(11.7276f, 18.1913f);
        mPath.cubicTo(11.699f, 18.4607f, 11.6832f, 18.73f, 11.6832f, 19.0f);
        mPath.cubicTo(11.6832f, 19.27f, 11.699f, 19.5393f, 11.7276f, 19.8087f);
        mPath.lineTo(11.7846f, 20.3467f);
        mPath.lineTo(8.5292f, 23.0261f);
        mPath.lineTo(10.2617f, 26.0268f);
        mPath.lineTo(14.1044f, 24.5871f);
        mPath.lineTo(14.5501f, 24.9433f);
        mPath.cubicTo(15.1121f, 25.3924f, 15.735f, 25.7625f, 16.4064f, 26.0379f);
        mPath.lineTo(16.9242f, 26.2503f);
        mPath.lineTo(17.5584f, 30.0529f);
        mPath.lineTo(21.0237f, 30.0529f);
        mPath.lineTo(21.6579f, 26.2503f);
        mPath.lineTo(22.1756f, 26.0379f);
        mPath.cubicTo(22.847f, 25.7625f, 23.4699f, 25.3924f, 24.032f, 24.9433f);
        mPath.lineTo(24.4776f, 24.5871f);
        mPath.lineTo(28.3204f, 26.0268f);
        mPath.lineTo(30.0529f, 23.0261f);
        mPath.lineTo(26.7975f, 20.3467f);
        mPath.lineTo(26.8545f, 19.8087f);
        mPath.cubicTo(26.8831f, 19.5393f, 26.8989f, 19.27f, 26.8989f, 19.0f);
        mPath.cubicTo(26.8989f, 18.73f, 26.8831f, 18.4607f, 26.8545f, 18.1913f);
        mPath.lineTo(26.7975f, 17.6533f);
        mPath.lineTo(30.0529f, 14.9739f);
        mPath.lineTo(28.3204f, 11.9732f);
        mPath.lineTo(24.4776f, 13.4129f);
        mPath.lineTo(24.032f, 13.0567f);
        mPath.cubicTo(23.4699f, 12.6076f, 22.847f, 12.2375f, 22.1756f, 11.9621f);
        mPath.lineTo(21.6579f, 11.7497f);
        mPath.lineTo(21.0237f, 7.9471f);
        mPath.lineTo(17.5584f, 7.9471f);
        mPath.close();
        mPath.moveTo(17.5584f, 7.9471f);
        mPath.moveTo(13.9016f, 19.0f);
        mPath.cubicTo(13.9016f, 16.0239f, 16.3149f, 13.6106f, 19.291f, 13.6106f);
        mPath.cubicTo(22.2672f, 13.6106f, 24.6805f, 16.0239f, 24.6805f, 19.0f);
        mPath.cubicTo(24.6805f, 21.9761f, 22.2672f, 24.3894f, 19.291f, 24.3894f);
        mPath.cubicTo(16.3149f, 24.3894f, 13.9016f, 21.9761f, 13.9016f, 19.0f);
        mPath.close();
        mPath.moveTo(13.9016f, 19.0f);
        mPath.moveTo(19.291f, 14.113f);
        mPath.cubicTo(16.5924f, 14.113f, 14.404f, 16.3013f, 14.404f, 19.0f);
        mPath.cubicTo(14.404f, 21.6987f, 16.5924f, 23.887f, 19.291f, 23.887f);
        mPath.cubicTo(21.9897f, 23.887f, 24.1781f, 21.6987f, 24.1781f, 19.0f);
        mPath.cubicTo(24.1781f, 16.3013f, 21.9897f, 14.113f, 19.291f, 14.113f);
        mPath.close();
        mPath.moveTo(19.291f, 14.113f);
        mPath.moveTo(19.291f, 15.6202f);
        mPath.cubicTo(17.4248f, 15.6202f, 15.9112f, 17.1338f, 15.9112f, 19.0f);
        mPath.cubicTo(15.9112f, 20.8662f, 17.4248f, 22.3798f, 19.291f, 22.3798f);
        mPath.cubicTo(21.1573f, 22.3798f, 22.6708f, 20.8662f, 22.6708f, 19.0f);
        mPath.cubicTo(22.6708f, 17.1338f, 21.1573f, 15.6202f, 19.291f, 15.6202f);
        mPath.close();
        mPath.moveTo(19.291f, 15.6202f);
        mPath.moveTo(15.4088f, 19.0f);
        mPath.cubicTo(15.4088f, 16.8563f, 17.1473f, 15.1178f, 19.291f, 15.1178f);
        mPath.cubicTo(21.4347f, 15.1178f, 23.1732f, 16.8563f, 23.1732f, 19.0f);
        mPath.cubicTo(23.1732f, 21.1437f, 21.4347f, 22.8822f, 19.291f, 22.8822f);
        mPath.cubicTo(17.1473f, 22.8822f, 15.4088f, 21.1437f, 15.4088f, 19.0f);
        mPath.close();
        mPath.moveTo(15.4088f, 19.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mRenderPath.setFillType(android.graphics.Path.FillType.EVEN_ODD);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}